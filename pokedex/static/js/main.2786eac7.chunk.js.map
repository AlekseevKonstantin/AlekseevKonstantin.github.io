{"version":3,"sources":["utils/utils.js","store/index.js","components/header.js","components/filter.js","components/pokemon.js","components/pokemonList.js","components/preloader.js","components/dialog.js","App.js","serviceWorker.js","index.js"],"names":["createRequest","instance","axios","create","baseURL","timeout","Accept","createAxios","res","a","then","response","status","data","catch","error","config","msg","message","fetchList","offset","count","get","params","fetchDesc","name","fetchTypeList","StoreContext","React","createContext","StoreProvider","children","store","useLocalStore","pages","pokemons","curList","page","isLoad","isDescLoad","typeList","isTypeListLoad","filterName","filterTypes","pageCount","selectedPokemon","reset","setSelectedPokemon","setPageCount","setFilterName","value","setFilterTypes","setIsTypeListLoad","setTypeList","list","types","results","array","i","len","length","push","sort","b","setCurList","item","clearCurList","setIsDescLoad","setIsLoad","setPage","setCount","setOffset","setPokemon","pokemon","setPageData","id","fetchPokemonsList","pageData","getPokemonDesk","r","setTimeout","fetchPokemonsDesc","console","log","url","replace","initTypeList","getPokemonInfo","mainImg","sprites","front_default","map","type","join","getPokemonDesc","height","weight","images","front_shiny","back_shiny","back_default","filterByName","filter","search","filterByType","Provider","useStyles","makeStyles","theme","header","width","display","justifyContent","padding","backgroundColor","breakpoints","down","logo","alignItems","color","fontSize","fontWeight","textfield","margin","borderColor","Header","classes","useContext","enterSearchHandler","e","target","useObserver","className","TextField","label","root","variant","size","onChange","counterBtn","transition","active","borderBottom","formControl","minWidth","maxWidth","Filter","MenuProps","PaperProps","style","maxHeight","ITEM_HEIGHT","btns","title","isActive","useEffect","useState","parseInt","btn","handleChange","counterBtnClickHandler","preventDefault","innerText","FormControl","InputLabel","Select","labelId","multiple","input","Input","renderValue","selected","index","MenuItem","key","Checkbox","checked","indexOf","ListItemText","primary","ButtonGroup","aria-label","Button","onClick","card","flexDirection","cursor","cardImg","palette","text","marginBottom","secondary","Pokemon","props","Card","onDialog","CardMedia","image","desc","container","PokemonList","pokemonToProps","pokemonList","pokemonDesc","Grid","xs","sm","md","spacing","isDescLoaded","ldsEllipsis","position","zIndex","top","left","transform","borderRadius","background","animationTimingFunction","animation","Preloader","dialog","imgBlock","marginRight","border","info","flexGrow","textValue","marginLeft","closeBtn","right","dialogTitle","paddingTop","PokemonDialog","onClose","open","Dialog","aria-labelledby","paper","IconButton","DialogTitle","src","alt","app","overflowX","content","pagination","marginTop","App","pageChangeHandler","dialogCloseHandler","Pagination","Math","round","shape","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2786eac7.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport const createRequest = () => {\r\n\r\n  const instance = axios.create({\r\n    baseURL: 'https://pokeapi.co/api/v2/',\r\n    timeout: 6000,\r\n    Accept: \"application/json, text/plain, */*\", \"Content-Type\": \"application/json\"\r\n  }); \r\n\r\n  function fetchList (offset, count) {\r\n    return createAxios(\r\n      instance.get('/pokemon', \r\n      { \r\n        params: {\r\n          'offset': `${offset}`,\r\n          'limit': `${count}`\r\n        } \r\n      }));\r\n  }\r\n\r\n  function fetchDesc (name) {\r\n    return createAxios(instance.get(`/pokemon/${name}`));\r\n  }\r\n\r\n  function fetchTypeList () {\r\n    return createAxios(instance.get('/type'));\r\n  }\r\n\r\n  async function createAxios (res) {\r\n    return await res\r\n    .then(response => {\r\n      return {status: response.status, data: response.data}\r\n    })\r\n    .catch(error => {\r\n      return {config: error.config, msg: error.message}\r\n    });\r\n  }\r\n\r\n  return {\r\n    fetchList,\r\n    fetchDesc,\r\n    fetchTypeList\r\n  };\r\n}","import React from 'react'\r\nimport { useLocalStore } from 'mobx-react'\r\nimport { createRequest } from '../utils/utils'\r\n\r\nexport const StoreContext = React.createContext();  \r\n\r\nexport const StoreProvider = ({children}) => {\r\n  const store = useLocalStore(() => {\r\n  \r\n  return {\r\n    pages: {},\r\n    pokemons: {},\r\n    count: 0,\r\n    offset: 0, \r\n    curList: [],\r\n    page: 1,\r\n    isLoad: false,\r\n    isDescLoad: false,\r\n    typeList: [],\r\n    isTypeListLoad: false,\r\n    filterName: '',\r\n    filterTypes: [],\r\n    pageCount: 20,\r\n    selectedPokemon: '',\r\n\r\n    /* setters */\r\n    reset () {\r\n      store.pages = {}\r\n      store.count = 0\r\n      store.offset = 0 \r\n      store.curList = []\r\n      store.page = 1\r\n      store.isLoad = false\r\n      store.isDescLoad = false\r\n\r\n    }, \r\n\r\n    setSelectedPokemon (name) {\r\n      store.selectedPokemon = name \r\n    },\r\n\r\n    setPageCount (count) {\r\n      store.pageCount = count\r\n    },\r\n\r\n    setFilterName (value) {\r\n      store.filterName = value\r\n    },\r\n\r\n    setFilterTypes (value) {\r\n      store.filterTypes = value\r\n    },\r\n\r\n    setIsTypeListLoad (value) {\r\n      store.isTypeListLoad = value\r\n    },\r\n\r\n    setTypeList (list) {\r\n      const types = list.results,\r\n            array = []  \r\n      for (let i = 0, len = types.length; i < len; i+=1) {\r\n        array.push(types[i].name)\r\n      }\r\n\r\n      store.typeList = array.sort((a, b) => a > b ? 1 : -1)\r\n    },\r\n\r\n    setCurList (item) {\r\n      store.curList.push(item)\r\n    },\r\n\r\n    clearCurList () {\r\n      store.curList = []\r\n    },\r\n\r\n    setIsDescLoad (value) {\r\n      store.isDescLoad = value\r\n    },\r\n\r\n    setIsLoad (value) {\r\n      store.isLoad = value\r\n    },\r\n\r\n    setPage (page) {\r\n      store.page = page \r\n    },\r\n\r\n    setCount (count) {\r\n      store.count = count\r\n    },\r\n\r\n    setOffset (offset) {\r\n      store.offset = offset\r\n    },\r\n\r\n    setPokemon (pokemon) {\r\n      store.pokemons[pokemon.name] = pokemon\r\n    },\r\n\r\n    setPageData (data, id) {\r\n      store.pages[id] = data;\r\n    },\r\n\r\n    /* async actions */\r\n\r\n    fetchPokemonsList (offset, count, id) {\r\n      \r\n      store.setIsLoad(false)\r\n      store.setIsDescLoad(false)\r\n      store.setOffset( offset )\r\n      store.setPage(id)\r\n\r\n      const pageData = store.pages[id]\r\n\r\n      if (store.count > 0 && pageData) {\r\n        store.getPokemonDesk(id)\r\n      }else{\r\n        createRequest().fetchList(offset, count)\r\n        .then(function(r) {\r\n          if (r.status === 200) {\r\n            store.setPageData(r.data, id)\r\n            if (store.count === 0) {\r\n              store.setCount(r.data.count)\r\n            }\r\n            store.setIsLoad(true)\r\n            store.getPokemonDesk(id)\r\n          }\r\n        })\r\n      }\r\n    },\r\n\r\n    getPokemonDesk (id) {\r\n      const pokemons = store.pages[id].results;\r\n      store.clearCurList();\r\n\r\n      for(let i = 0, len = pokemons.length; i < len; i += 1) {\r\n        if (store.pokemons[pokemons[i].name]) {\r\n          setTimeout(() => {store.setCurList(store.pokemons[pokemons[i].name])}, 100) \r\n        }else{\r\n          store.fetchPokemonsDesc(pokemons[i].name)\r\n        }\r\n      }\r\n    },\r\n\r\n    fetchPokemonsDesc (name) {\r\n\r\n      setTimeout(() => {\r\n        createRequest().fetchDesc (name)\r\n        .then(function(r) {\r\n          if (r.status === 200) {\r\n            store.setPokemon(r.data)\r\n            setTimeout(() => {store.setCurList(r.data)}, 100)\r\n            \r\n          }else{\r\n            console.log(r.msg)\r\n            let name = r.config.url.replace('/pokemon/', '')\r\n            store.fetchPokemonsDesc(name)\r\n          }\r\n        })\r\n      }, 50)\r\n    },\r\n\r\n    initTypeList () {\r\n      store.setIsTypeListLoad(false)\r\n      createRequest().fetchTypeList()\r\n        .then(function(r) {\r\n          if (r.status === 200) {\r\n            store.setTypeList(r.data)\r\n          }else{\r\n            console.log(r.msg)\r\n          }\r\n\r\n          store.setIsTypeListLoad(true)\r\n        })\r\n    },\r\n\r\n    /* getters */\r\n\r\n    getPokemonInfo (name) {\r\n\r\n      const pokemon = store.pokemons[name]\r\n\r\n      return {\r\n        id: pokemon.id,\r\n        name: pokemon.name,\r\n        mainImg: pokemon.sprites.front_default,\r\n        types: pokemon.types.map(item => item.type.name).join(', ')\r\n      }\r\n    },\r\n\r\n    getPokemonDesc (name) {\r\n\r\n      const pokemon = store.pokemons[name]\r\n\r\n      return {\r\n        id: pokemon.id,\r\n        name: pokemon.name,\r\n        height: pokemon.height,\r\n        weight: pokemon.weight,\r\n        images: [pokemon.sprites.front_default, pokemon.sprites.front_shiny, pokemon.sprites.back_shiny, pokemon.sprites.back_default],\r\n        types: pokemon.types.map(item => item.type.name).join(', ')\r\n      }\r\n    },\r\n\r\n    filterByName (list) {\r\n      return list.filter((item) => {\r\n        return !item.name.search(store.filterName)\r\n      })\r\n    },\r\n\r\n    filterByType (list) {\r\n      let filter = store.filterTypes.sort().join(', ')\r\n      return list.filter((item) => {\r\n        const source = item.types.map(item => item.type.name).sort().join(', ')\r\n        return source.search(filter) > -1\r\n      })\r\n    },\r\n\r\n    /* computed */\r\n    get pokemonList () {\r\n      if (store.filterName.length > 0 && store.filterTypes.length > 0){\r\n        return store.filterByType(store.filterByName(store.curList))\r\n      }else if (store.filterName.length > 0) {\r\n        return store.filterByName(store.curList)\r\n      }else if(store.filterTypes.length > 0){\r\n        return store.filterByType(store.curList)\r\n      }\r\n\r\n      return store.curList\r\n    },\r\n    \r\n    get isDescLoaded () {\r\n      if (store.pages[store.page]) {\r\n        if (store.curList.length === store.pages[store.page].results.length) {\r\n          return true\r\n        }\r\n      } \r\n      return false\r\n    }\r\n    \r\n  }})\r\n  \r\n  return (\r\n    <StoreContext.Provider value={store}>{children}</StoreContext.Provider>\r\n  )\r\n}\r\n\r\n","import React from 'react'\r\nimport { StoreContext } from './../store'\r\nimport { useObserver } from 'mobx-react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n  header: {\r\n    width: '100%',\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    padding: '10px 30px',\r\n    backgroundColor: '#dc004e',\r\n\r\n    [theme.breakpoints.down('sm')]: {\r\n      padding: '10px 15px',\r\n    },\r\n  },\r\n\r\n  logo: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    color: '#fff',\r\n    fontSize: '1.3rem',\r\n    fontWeight: '700',\r\n\r\n    [theme.breakpoints.down('sm')]: {\r\n      fontSize: '1rem'\r\n    }\r\n\r\n  },\r\n\r\n  textfield: {\r\n    color: '#fff',\r\n    margin: '8px 0px 8px 20px',\r\n\r\n    '& input': {\r\n      color: '#fff !important',\r\n    },\r\n\r\n    '& label': {\r\n      color: '#fff !important',\r\n    },\r\n\r\n    '& fieldset': {\r\n      borderColor: '#fff !important'\r\n    }\r\n  }\r\n}));\r\n\r\nexport default function Header () {\r\n\r\n  const classes = useStyles()\r\n\r\n  const store = React.useContext(StoreContext);\r\n\r\n  function enterSearchHandler (e) {\r\n    store.setFilterName(e.target.value)\r\n  }\r\n\r\n  return useObserver (() => (\r\n    <header className={classes.header}>\r\n      <span className={classes.logo}>Pokedex</span>\r\n      <div className=\"d-flex align-center\">\r\n        <TextField\r\n          label=\"filter by name\"\r\n          classes={{root: classes.textfield}}\r\n          type=\"text\"\r\n          margin=\"normal\"\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          onChange={enterSearchHandler}\r\n          value={store.filterName}\r\n        />\r\n      </div>\r\n    </header>\r\n  )) \r\n}","import React, {useState, useEffect} from 'react'\r\nimport { StoreContext } from './../store'\r\nimport { useObserver } from 'mobx-react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport Input from '@material-ui/core/Input';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n  filter: {\r\n    width: '100%',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 30px 30px 30px',\r\n\r\n    [theme.breakpoints.down('sm')]: {\r\n      padding: '0 15px 30px 15px',\r\n    },\r\n  },\r\n\r\n  counterBtn: {\r\n    color: '#bdbdbd',\r\n    borderColor: '#bdbdbd !important',\r\n    transition: 'border-color .3s'\r\n  },\r\n\r\n  active: {\r\n    borderBottom: '1px solid #bdbdbd'    \r\n  },\r\n\r\n  formControl: {\r\n    minWidth: 120,\r\n    maxWidth: 300,\r\n    margin: '0 40px'\r\n  }\r\n}))\r\n\r\nexport default function Filter () {\r\n\r\n  const store = React.useContext(StoreContext);\r\n\r\n  const ITEM_HEIGHT = 48;\r\n  const ITEM_PADDING_TOP = 8;\r\n\r\n  const MenuProps = {\r\n    PaperProps: {\r\n      style: {\r\n        maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n        width: 250,\r\n      },\r\n    },\r\n  };\r\n\r\n  const btns = [\r\n    {\r\n      title: 10, \r\n      isActive: false, \r\n    },\r\n    {\r\n      title: 20,\r\n      isActive: true\r\n    }, \r\n    {\r\n      title: 50,\r\n      isActive: false\r\n    }\r\n  ]\r\n\r\n  const classes = useStyles()\r\n\r\n  useEffect(() => {\r\n    store.initTypeList()\r\n  }, [])\r\n\r\n  const [btn] = useState(() => {\r\n    return activeBtn(store.pageCount)\r\n  })\r\n\r\n  function activeBtn(value) {\r\n    return btns.map((item) => {\r\n      item.isActive = item.title !== parseInt(value) ? false : true\r\n      return item\r\n    })\r\n  }\r\n\r\n  function handleChange (e) {\r\n    store.setFilterTypes(e.target.value);\r\n  }\r\n\r\n  function counterBtnClickHandler (e) {\r\n    e.preventDefault()\r\n    let value = e.target.innerText;\r\n    store.setPageCount(value)\r\n  }\r\n\r\n  const btnsToMap = () => {\r\n    return btn.map(item => {\r\n      return <Button className={classes.counterBtn} \r\n                     classes={item.isActive ? {label: classes.active} : null} \r\n                     key={item.title} \r\n                     onClick={counterBtnClickHandler}>\r\n                {item.title}\r\n             </Button>\r\n    })\r\n  }\r\n\r\n  return useObserver(() => (\r\n    <div className={classes.filter}>\r\n\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel id=\"mutiple-checkbox-label\">Types</InputLabel>\r\n        <Select\r\n          labelId=\"mutiple-checkbox-label\"\r\n          id=\"mutiple-checkbox\"\r\n          multiple\r\n          value={store.filterTypes}\r\n          onChange={handleChange}\r\n          input={<Input />}\r\n          renderValue={(selected) => selected.join(', ')}\r\n          MenuProps={MenuProps}>\r\n\r\n          {store.isTypeListLoad && store.typeList.map((title, index) => (\r\n            <MenuItem key={index} value={title}>\r\n              <Checkbox checked={store.filterTypes.indexOf(title) > -1} />\r\n              <ListItemText primary={title} />\r\n            </MenuItem>\r\n          ))} \r\n        </Select>\r\n      </FormControl>\r\n\r\n      <ButtonGroup variant=\"text\" color=\"primary\" aria-label=\"text primary button group\">\r\n        {btn.length > 0 && btnsToMap ()}\r\n      </ButtonGroup>\r\n    </div>\r\n  ))\r\n}\r\n\r\n","import React from 'react'\r\n\r\nimport Card from '@material-ui/core/Card';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    padding: '10px 15px',\r\n    '&:hover': {\r\n      cursor: 'pointer'\r\n    }\r\n  },\r\n  cardImg: {\r\n    width: '90px',\r\n    height: '90px'\r\n  },\r\n  title: {\r\n    display: 'block',\r\n    fontWeight: '600',\r\n    fontSize: '1.2rem',\r\n    color: theme.palette.text.primary,\r\n    marginBottom: '3px'\r\n  },\r\n  types: {\r\n    display: 'block',\r\n    fontWeight: '300',\r\n    fontSize: '14px',\r\n    color: theme.palette.text.secondary,\r\n    marginBottom: '2px'\r\n  }\r\n}))\r\n\r\nconst Pokemon = (props) => {\r\n  \r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={classes.card} onClick={props.onDialog}>\r\n      <CardMedia image={`${props.desc.mainImg}`} className={classes.cardImg} />\r\n      <span className={classes.title}>{props.desc.name}</span>\r\n      <span className={classes.types}>{props.desc.types}</span>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default Pokemon","import React from 'react'\r\nimport { useObserver } from 'mobx-react'\r\nimport { StoreContext } from '../store'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid'\r\n\r\nimport Pokemon from './pokemon'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    padding: '0 30px 30px 30px',\r\n\r\n    [theme.breakpoints.down('sm')]: {\r\n      padding: '0 15px 30px 15px',\r\n    },\r\n  },\r\n}))\r\n\r\nconst PokemonList = () => {\r\n  const store = React.useContext(StoreContext)\r\n\r\n  const classes = useStyles();\r\n\r\n  function onDialogHandler (name) {\r\n    store.setSelectedPokemon(name)\r\n  }\r\n\r\n  const pokemonToProps = () => {\r\n    return store.pokemonList.map((item, index) => {\r\n      const pokemonDesc = store.getPokemonInfo(item.name)\r\n      return (\r\n        <Grid item xs={12} sm={6} md={3} key={index}> \r\n          <Pokemon desc={pokemonDesc} onDialog={() => onDialogHandler(pokemonDesc.name)}/> \r\n        </Grid>\r\n      )\r\n    })\r\n  }\r\n  \r\n  return useObserver(() =>   ( \r\n    <Grid container spacing={3} className={classes.container}>\r\n      {store.isDescLoaded && pokemonToProps()}\r\n    </Grid>\r\n  ))\r\n  \r\n}\r\n\r\nexport default PokemonList","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  ldsEllipsis: {\r\n    position: 'absolute',\r\n    zIndex: '100',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    display: 'inline-block',\r\n    width: '80px',\r\n    height: '80px',\r\n    '& div': {\r\n      position: 'absolute',\r\n      top: '33px',\r\n      width: '13px',\r\n      height: '13px',\r\n      borderRadius: '50%',\r\n      background: '#000',\r\n      animationTimingFunction: 'cubic-bezier(0, 1, 1, 0)',\r\n\r\n      '&:nth-child(1)': {\r\n        left: '8px',\r\n        animation: `$lds-ellipsis1 600ms infinite`,\r\n      },\r\n\r\n      '&:nth-child(2)': {\r\n        left: '8px',\r\n        animation: `$lds-ellipsis2 600ms infinite`\r\n      },\r\n\r\n      '&:nth-child(3)': {\r\n        left: '32px',\r\n        animation: `$lds-ellipsis2 600ms infinite`\r\n      },\r\n\r\n      '&:nth-child(4)': {\r\n        left: '56px',\r\n        animation: `$lds-ellipsis3 0.6s infinite`\r\n      }\r\n    }\r\n  },\r\n\r\n  '@keyframes lds-ellipsis1': {\r\n    '0%': {\r\n      transform: 'scale(0)'\r\n    },\r\n    '100%': {\r\n      transform: 'scale(1)'\r\n    }\r\n  },\r\n\r\n  '@keyframes lds-ellipsis3': {\r\n    '0%': {\r\n      transform: 'scale(1)'\r\n    },\r\n    '100%': {\r\n      transform: 'scale(0)'\r\n    }\r\n  },\r\n\r\n  '@keyframes lds-ellipsis2': {\r\n    '0%': {\r\n      transform: 'translate(0, 0)'\r\n    },\r\n    '100%': {\r\n      transform: 'translate(24px, 0)'\r\n    }\r\n  },\r\n}))\r\n\r\nexport default function Preloader () {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.ldsEllipsis}>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n    </div>\r\n  )\r\n}","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  dialog: {\r\n    position: 'relatiove',\r\n    padding: '20px',\r\n    minWidth: '300px'\r\n  },\r\n  imgBlock: {\r\n    width: '70px',\r\n    marginRight: '30px',\r\n\r\n    '& img': {\r\n      display: 'block',\r\n      width: '70px',\r\n      height: '70px',\r\n      border: `1px solid ${theme.palette.text.secondary}`,\r\n      borderRadius: '4px',\r\n      marginBottom: '4px',\r\n\r\n      '&:last-child': {\r\n        marginBottom: '0'\r\n      }\r\n    }\r\n  },\r\n  info: {\r\n    flexGrow: '1'\r\n  },\r\n  text: {\r\n    display: 'flex',\r\n    fontWeight: '400',\r\n    fontSize: '1rem',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  textValue: {\r\n    display: 'block',\r\n    fontWeight: '500',\r\n    fontSize: '1rem',\r\n    color: theme.palette.text.primary,\r\n    marginLeft: '6px'\r\n  },\r\n  closeBtn: {\r\n    position: 'absolute',\r\n    zIndex: '300',\r\n    top: '12px',\r\n    right: '12px'\r\n  },\r\n  dialogTitle: {\r\n    paddingTop: '0'\r\n  }\r\n}))\r\n\r\nexport default function PokemonDialog (props) {\r\n  \r\n  const classes = useStyles();\r\n\r\n  const {onClose, pokemon, open } = props;\r\n\r\n  function handleExpandClick () {\r\n    onClose()\r\n  }\r\n\r\n  function handleClose () {\r\n    onClose()\r\n  }\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"simple-dialog-title\" \r\n            open={open} \r\n            classes={{paper: classes.dialog}}\r\n            onClose={handleClose}>\r\n\r\n      <IconButton\r\n        onClick={handleExpandClick}\r\n        aria-label=\"close\"\r\n        size=\"small\"\r\n        classes={{root: classes.closeBtn}}>\r\n          <CloseIcon />\r\n      </IconButton>  \r\n      <DialogTitle id=\"simple-dialog-title\" classes={{root: classes.dialogTitle}}>Detailed description</DialogTitle>\r\n\r\n      <div className=\"d-flex w100p\">\r\n        <div className={classes.imgBlock}>\r\n          {pokemon.images.map((item, index) => <img src={item} alt={item} key={index} />)}\r\n        </div>\r\n\r\n        <div className={classes.info}>\r\n          <span className={classes.text}>name: <span className={classes.textValue}>{pokemon.name}</span></span>\r\n          <span className={classes.text}>height: <span className={classes.textValue}>{pokemon.height}</span></span>\r\n          <span className={classes.text}>weight: <span className={classes.textValue}>{pokemon.weight}</span></span>\r\n          <span className={classes.text}>types: <span className={classes.textValue}>{pokemon.types}</span></span>\r\n        </div>\r\n      </div>\r\n    </Dialog>\r\n  )\r\n}","import React, { useEffect }  from 'react';\nimport { useObserver } from 'mobx-react'\nimport { StoreContext } from './store'\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Pagination from '@material-ui/lab/Pagination';\n\nimport Header from './components/header'\nimport Filter from './components/filter'\nimport PokemonList from './components/pokemonList'\nimport Preloader from './components/preloader'\nimport PokemonDialog from './components/dialog'\n\nconst useStyles = makeStyles((theme) => ({\n  app: {\n    position: 'relative',\n    height: '100%', \n    display: 'flex',\n    flexDirection: 'column',\n    overflowX: 'hidden'\n  },\n  content: {\n    position: 'relative',\n    width: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    flexGrow: 1,\n    padding: '30px 0'\n  },\n  pagination: {\n    marginTop: 'auto'\n  },\n}));\n\nfunction App() {\n\n  const classes = useStyles();\n\n  const store = React.useContext(StoreContext);\n\n  useEffect(()=>{\n    store.reset()\n    store.fetchPokemonsList(store.pageCount, store.pageCount, 1)\n  }, [store.pageCount])\n\n  function pageChangeHandler (e, page) {\n    store.fetchPokemonsList(page*store.pageCount, store.pageCount, page)\n  }\n\n  function dialogCloseHandler () {\n    store.setSelectedPokemon('')\n  }\n\n  return useObserver(() => (\n    <div className={classes.app}>\n      { \n        store.selectedPokemon.length > 0 && \n        <PokemonDialog pokemon={store.getPokemonDesc(store.selectedPokemon)} \n                       open={store.selectedPokemon.length > 0}\n                       onClose={dialogCloseHandler}/>\n      }\n\n      <Header />\n\n      {store.isDescLoaded ?\n        <main className={classes.content}>\n          <Filter />\n          <PokemonList /> \n          <Pagination className={classes.pagination} \n                      count={Math.round(store.count / store.pageCount)} \n                      shape=\"rounded\" \n                      page={store.page}\n                      onChange={pageChangeHandler}/>\n        </main> :\n        <Preloader />\n      } \n    </div>\n  )) \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { StoreProvider } from './store'\n\nReactDOM.render(\n  <StoreProvider>\n    <App />\n  </StoreProvider>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}